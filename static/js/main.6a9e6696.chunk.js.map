{"version":3,"sources":["reducer/FirstReducer.js","reducer/DoctorsReducer.js","reducer/DrugsReducer.js","reducer/ChosenReducer.js","action/types.js","reducer/index.js","store.js","component/PrivetRoute.js","action/actions.js","Firebase.js","component/MappedList.js","component/OrgList.js","component/History.js","component/Dashboard.js","component/LogInPage.js","component/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["initialState","name","password","FirstReducer","state","action","type","docs","spec","gov","DoctorsReducer","medic","DrugsReducer","ChosenReducer","payload","concat","map","el","id","visited","console","log","work","length","achivement","combineReducers","Store","createStore","rootReducer","compose","applyMiddleware","store","next","window","__REDUX_DEVTOOLS_EXTENSION__","PrivateRoute","Component","component","connected","rest","render","props","to","pathname","from","location","add","doctor","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","connect","list","dispatch","doctors","update","updateWork","verif","useState","setwork","setvisited","keyword","setkeyword","keywordspec","setkeywordspec","keywordgov","setkeywordgov","date","setdate","selected","setSelected","show","setShow","handleClose","ref","database","useEffect","on","data","keys","decData","val","newData","Object","filtredvisit","filter","toUpperCase","includes","className","onChange","e","target","value","style","width","placeholder","overflow","DropdownButton","title","Dropdown","Item","onClick","Modal","onHide","Header","closeButton","Title","Body","i","htmlFor","Footer","Button","variant","keyVal","push","key","ele","ii","y","set","drug","chosenDate","setChosenDate","chosenDoc","setChosenDoc","showsec","setShowsec","handleClosesec","filtredgov","onChangeCapture","alert","uuidv4","checked","x","find","keywordach","setkeywordach","toFixed","textAlign","Dashboard","exact","path","MappedList","OrgList","History","user","showpass","setshowpass","showhide","setshowhide","information","setInformation","conVal","setconVal","showHide","preventDefault","handleChange","logVerif","element","padding","display","justifyContent","textDecoration","color","NavBar","Navbar","bg","Nav","App","LoginPage","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a9e6696.chunk.js","sourcesContent":["const initialState = [\r\n  { name: \"mahdi\", password: \"mahdi\" },\r\n  { name: \"admin\", password: \"admin\" },\r\n  { name: \"\", password: \"\" },\r\n];\r\nconst FirstReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default FirstReducer;\r\n","const docs = [\r\n  {\r\n    name: \"Dr Mariem JRIBI BEN HENIA\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Kamel LARBI\",\r\n    spec: \"Chirurgien Esthétique\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Rami REBAI\",\r\n    spec: \"Angiologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Hela GHEZAIEL\",\r\n    spec: \"Néphrologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Mr Imed JEGHAM\",\r\n    spec: \"Psychothérapeute\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Aycha AROUSSE\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Haouas NOUREDDINE\",\r\n    spec: \"Urologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Badi KAABIA\",\r\n    spec: \"Orthodontiste\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Mohamed moez BEN SAYAH\",\r\n    spec: \"Pneumologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Razi OUANES\",\r\n    spec: \"Chirurgien Orthopédiste Traumatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Lamia GOLLI HAMILA\",\r\n    spec: \"Gastro_entérologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Amine ABID - CENTRE DE RADIOLOGIE EL WIFEK\",\r\n    spec: \"Radiologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Nesrine KENANI KASSASSI\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Oussama BEN REJEB\",\r\n    spec: \"Cardiologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Mlle Safa BEN HASSEN\",\r\n    spec: \"Nutritionniste\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Zakaria AWEDNI\",\r\n    spec: \"Chirurgien Orthopédiste Traumatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Adnan MOURAD\",\r\n    spec: \"Neurochirurgien\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ali faouzi MOSBAH\",\r\n    spec: \"Chirurgien Urologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ikram EL AMRI GRIBAA\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Rafiaa BEN AMNA EP NOUIRA\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Raja HEDDA\",\r\n    spec: \"Psychiatre\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ramzi CHTIOUI\",\r\n    spec: \"Chirurgien Orthopédiste\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ahlem SOUGUIR GAAYA\",\r\n    spec: \"Gastro_entérologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ashraaf LAROUSSI MELLOULI\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Salem HEMDANE\",\r\n    spec: \"Gynécologue Obstétricien\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Slama SAMIRA\",\r\n    spec: \"Médecin Physique Réadaptateur\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Mme Maroua CHARFI KAMMOUN\",\r\n    spec: \"Audioprothésiste\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Mr Mohamed  rami AYACHI\",\r\n    spec: \"Audioprothésiste\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Mélinda BHIRI\",\r\n    spec: \"Médecin Esthétique\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Fethi JENAYAH\",\r\n    spec: \"Neurochirurgien\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Hamdi BOUAZRA\",\r\n    spec: \"Pneumologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Nabil DENGUEZLI\",\r\n    spec: \"Rhumatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Omrane BEN REJEB\",\r\n    spec: \"Gynécologue Obstétricien\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Bessem YAZID\",\r\n    spec: \"Ophtalmologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Imen ESSASSI KHALFALLAH\",\r\n    spec: \"Gynécologue Obstétricien\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Zoubeir SNANI\",\r\n    spec: \"Psychothérapeute\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Kamel AROUS\",\r\n    spec: \"Ophtalmologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ilhem ARDHAOUI BEN AHMED\",\r\n    spec: \"Endocrinologue Diabétologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Ibtissem KACEM JABALLAH\",\r\n    spec: \"Endocrinologue Diabétologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Riadh ROMDHANE\",\r\n    spec: \"Ophtalmologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Souad LACHAAL BEN CHEIKH\",\r\n    spec: \"Dermatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Dr Jameleddine SALHI\",\r\n    spec: \"Psychiatre\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n  {\r\n    name: \"Pr Riadh BEN HAMIDA\",\r\n    spec: \"Chirurgien Orthopédiste Traumatologue\",\r\n    gov: \"Sousse Ville Sousse\",\r\n  },\r\n];\r\nconst DoctorsReducer = (state = docs, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default DoctorsReducer;\r\n","const initialState = [\r\n  {\r\n    name: \"Gastro_entérologue\",\r\n    medic: [\"GincorFort\", \"Phloro\", \"Ilax\"],\r\n  },\r\n  {\r\n    name: \"Chirurgien Esthétique\",\r\n    medic: [\"GincorFort\", \"Phloro\", \"Ilax\"],\r\n  },\r\n  {\r\n    name: \"Angiologue\",\r\n    medic: [\"GincorFort\", \"Phloro\", \"Ilax\"],\r\n  },\r\n  {\r\n    name: \"Néphrologue\",\r\n    medic: [\"GincorFort\", \"Phloro\", \"Ilax\"],\r\n  },\r\n  {\r\n    name: \"Dermatologue\",\r\n    medic: [\"Allergica\", \"ecrant\"],\r\n  },\r\n  {\r\n    name: \"Psychothérapeute\",\r\n    medic: [\"Allergica\", \"ecrant\"],\r\n  },\r\n  {\r\n    name: \"Urologue\",\r\n    medic: [\"Allergica\", \"ecrant\"],\r\n  },\r\n  {\r\n    name: \"Orthodontiste\",\r\n    medic: [\"Allergica\", \"ecrant\"],\r\n  },\r\n  {\r\n    name: \"Cardiologue\",\r\n    medic: [\"teros\"],\r\n  },\r\n  {\r\n    name: \"Pneumologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Endocrinologue Diabétologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Médecin Esthétique\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Radiologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Nutritionniste\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Ophtalmologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Neurochirurgien\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Rhumatologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Psychiatre\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Audioprothésiste\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Médecin Physique Réadaptateur\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Gynécologue Obstétricien\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Chirurgien Urologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n  {\r\n    name: \"Chirurgien Orthopédiste Traumatologue\",\r\n    medic: [\"panadol\", \"IPP\", \"Appranax\"],\r\n  },\r\n];\r\nconst DrugsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default DrugsReducer;\r\n","import { ADD, UPDATE, UPDATE_WORK, VERIF } from \"../action/types\";\r\n\r\nconst initialState = [];\r\nconst ChosenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case VERIF:\r\n      return (state = action.payload);\r\n    case ADD:\r\n      return state.concat(action.payload);\r\n    case UPDATE:\r\n      return state.map((el) => {\r\n        return el.id === action.payload ? { ...el, visited: \"Visiter\" } : el;\r\n      });\r\n    case UPDATE_WORK:\r\n      return state.map((el) => {\r\n        console.log(action.payload.work.length);\r\n        return el.id === action.payload.id\r\n          ? el.medic && {\r\n              ...el,\r\n              work: action.payload.work,\r\n              achivement: (action.payload.work.length / el.medic.length) * 100,\r\n            }\r\n          : el;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ChosenReducer;\r\n","export const ADD = \"ADD\";\r\nexport const UPDATE = \"UPDATE\";\r\nexport const UPDATE_WORK = \"UPDATE_WORK\";\r\nexport const VERIF = \"VERIF\";\r\n","import { combineReducers } from \"redux\";\r\nimport FirstReducer from \"./FirstReducer\";\r\nimport DoctorsReducer from \"./DoctorsReducer\";\r\nimport DrugsReducer from \"./DrugsReducer\";\r\nimport ChosenReducer from \"./ChosenReducer\";\r\n\r\nexport default combineReducers({\r\n  FirstReducer,\r\n  DoctorsReducer,\r\n  ChosenReducer,\r\n  DrugsReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst something = (store) => (next) => (action) => {\r\n  // console.log(action, store.getState());\r\n  next(action);\r\n  // console.log(action, store.getState());\r\n};\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(something),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, connected, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        connected ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { ADD, UPDATE, UPDATE_WORK, VERIF } from \"./types\";\r\nexport const add = (doctor) => {\r\n  return {\r\n    type: ADD,\r\n    payload: doctor,\r\n  };\r\n};\r\nexport const update = (his) => {\r\n  return {\r\n    type: UPDATE,\r\n    payload: his,\r\n  };\r\n};\r\nexport const updateWork = (his) => {\r\n  return {\r\n    type: UPDATE_WORK,\r\n    payload: his,\r\n  };\r\n};\r\nexport const verif = (his) => {\r\n  return {\r\n    type: VERIF,\r\n    payload: his,\r\n  };\r\n};\r\n","import * as firebase from \"firebase\";\r\n// import firestore from \"firebase/firestore\";\r\n\r\n// const settings = { timestampsInSnapshots: true };\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDa4naEcu3iRU1zizBV-Ym8EJwbcWhYJBc\",\r\n  authDomain: \"delegueproject.firebaseapp.com\",\r\n  databaseURL: \"https://delegueproject.firebaseio.com\",\r\n  projectId: \"delegueproject\",\r\n  storageBucket: \"delegueproject.appspot.com\",\r\n  messagingSenderId: \"877358299965\",\r\n  appId: \"1:877358299965:web:5362b8d893df347eb56354\",\r\n  measurementId: \"G-MLK9JJKRJL\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// firebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport { update, updateWork, add, verif } from \"../action/actions\";\r\nimport firebase from \"../Firebase\";\r\n\r\nfunction MappedList(props) {\r\n  const [work, setwork] = useState({\r\n    id: \"\",\r\n    work: [],\r\n  });\r\n  const [visited, setvisited] = useState(\"\");\r\n  const [keyword, setkeyword] = useState(\"\");\r\n  const [keywordspec, setkeywordspec] = useState(\"\");\r\n  const [keywordgov, setkeywordgov] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [selected, setSelected] = useState({\r\n    name: \"\",\r\n    spec: \"\",\r\n    gov: \"\",\r\n    medic: [],\r\n  });\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const ref = firebase.database().ref(\"chosenDoctor\");\r\n  useEffect(() => {\r\n    ref.on(\"value\", (data) => {\r\n      let decData = data.val();\r\n      let keys;\r\n      let newData = [];\r\n      decData && (keys = Object.keys(decData));\r\n      keys &&\r\n        keys.map((el) => {\r\n          newData = newData.concat(decData[el]);\r\n          props.add(newData);\r\n        });\r\n      props.verif(newData);\r\n    });\r\n  }, []);\r\n  const fireUpdate = () => {\r\n    ref.on(\"value\", (data) => {\r\n      let decData = data.val();\r\n      let keys;\r\n      let newData = [];\r\n      let keyVal = [];\r\n      decData && (keys = Object.keys(decData));\r\n      keys &&\r\n        keys.map((el) => {\r\n          keyVal.push({ key: el });\r\n          newData.push(decData[el]);\r\n        });\r\n\r\n      newData &&\r\n        newData.map((el, i) => {\r\n          el.map((ele, ii) => {\r\n            if (ele.id === selected.id) {\r\n              firebase\r\n                .database()\r\n                .ref(`chosenDoctor/${keyVal[i].key}/${ii}/visited`)\r\n                .set(\"Visiter\");\r\n            }\r\n\r\n            if (ele.id === selected.id) {\r\n              let y;\r\n              if ((ele.medic = [])) {\r\n                y = 1;\r\n              } else {\r\n                y = ele.medic.length;\r\n              }\r\n              firebase\r\n                .database()\r\n                .ref(`chosenDoctor/${keyVal[i].key}/${ii}/achivement`)\r\n                .set((work.work.length / y) * 100);\r\n            }\r\n            if (ele.id === selected.id) {\r\n              firebase\r\n                .database()\r\n                .ref(`chosenDoctor/${keyVal[i].key}/${ii}/work`)\r\n                .set(work.work);\r\n            }\r\n          });\r\n        });\r\n    });\r\n  };\r\n\r\n  const valider = () => {\r\n    handleClose();\r\n    props.update(selected.id);\r\n    props.updateWork(work);\r\n    fireUpdate();\r\n    setwork({ id: \"\", work: [] });\r\n    setSelected({\r\n      id: \"\",\r\n      name: \"\",\r\n      spec: \"\",\r\n      gov: \"\",\r\n      medic: [],\r\n    });\r\n  };\r\n  let dateFilter = props.list.filter((el) => el.date === date);\r\n  let filtredspec = dateFilter.filter((el) =>\r\n    el.spec.toUpperCase().includes(keywordspec.toUpperCase())\r\n  );\r\n  let filtredgov = filtredspec.filter((el) =>\r\n    el.gov.toUpperCase().includes(keywordgov.toUpperCase())\r\n  );\r\n  let filtred = filtredgov.filter((el) =>\r\n    el.name.toUpperCase().includes(keyword.toUpperCase())\r\n  );\r\n  let filtredvisit = filtred.filter((el) =>\r\n    el.visited.toUpperCase().includes(visited.toUpperCase())\r\n  );\r\n  return (\r\n    <div className=\"container-fluid row\">\r\n      <h1 className=\"col-12\">Tableau de bord</h1>\r\n      <div className=\"col-12\">\r\n        <input\r\n          type=\"date\"\r\n          onChange={(e) => {\r\n            setdate(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"col-1\"></div>\r\n      <table className=\"col-10\">\r\n        <tr className=\"form\">\r\n          <th className=\"tableau\">\r\n            Nom\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeyword(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Specialité\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordspec(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Adresse\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordgov(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\" style={{ overflow: \"visible\" }}>\r\n            <DropdownButton\r\n              id=\"dropdown-basic-button\"\r\n              title={visited ? visited : \"Tout\"}\r\n            >\r\n              <Dropdown.Item onClick={() => setvisited(\"Visiter\")}>\r\n                Visiter\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => setvisited(\"Pas encore\")}>\r\n                Reste à visiter\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => setvisited(\"\")}>Tout</Dropdown.Item>\r\n            </DropdownButton>\r\n          </th>\r\n        </tr>\r\n\r\n        {filtredvisit.map((el) => {\r\n          return (\r\n            <tr\r\n              className=\"form\"\r\n              onClick={() => {\r\n                handleShow();\r\n                setSelected({\r\n                  id: el.id,\r\n                  name: el.name,\r\n                  spec: el.spec,\r\n                  gov: el.gov,\r\n                  medic: el.medic,\r\n                });\r\n              }}\r\n            >\r\n              <td className=\"tableau\">{el.name}</td>\r\n              <td className=\"tableau\">{el.spec}</td>\r\n              <td className=\"tableau\">{el.gov}</td>\r\n              <td className=\"tableau\">{el.visited}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </table>\r\n      <div className=\"col-1\"></div>\r\n      <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Valider le contact</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid row\">\r\n              <div className=\"col-4\">Name: </div>\r\n              <div className=\"col-8\">{selected.name}</div>\r\n              <div className=\"col-4\">spécialité </div>\r\n              <div className=\"col-8\">{selected.spec}</div>\r\n              <div className=\"col-4\">Adresse </div>\r\n              <div className=\"col-8\">{selected.gov}</div>\r\n              <div className=\"col-4\">Medicamment </div>\r\n              <div className=\"col-8\">\r\n                {selected.medic &&\r\n                  selected.medic.map((el, i) => {\r\n                    return (\r\n                      <div>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={i}\r\n                          onClick={() =>\r\n                            setwork({\r\n                              ...work,\r\n                              id: selected.id,\r\n                              work: work.work.concat(el),\r\n                            })\r\n                          }\r\n                        />\r\n                        <label htmlFor={i}>{el}</label>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={valider}>\r\n              Valider\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.ChosenReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    add: (doctors) => dispatch(add(doctors)),\r\n    update: (doctors) => dispatch(update(doctors)),\r\n    updateWork: (doctors) => dispatch(updateWork(doctors)),\r\n    verif: (doctors) => dispatch(verif(doctors)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MappedList);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport { add } from \"../action/actions\";\r\nimport firebase from \"../Firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction OrgList(props) {\r\n  const [chosenDate, setChosenDate] = useState(\"\");\r\n  const [chosenDoc, setChosenDoc] = useState([]);\r\n  const [keyword, setkeyword] = useState(\"\");\r\n  const [keywordspec, setkeywordspec] = useState(\"\");\r\n  const [keywordgov, setkeywordgov] = useState(\"\");\r\n  const [selected, setSelected] = useState({});\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const [showsec, setShowsec] = useState(false);\r\n  const handleClosesec = () => setShowsec(false);\r\n  const handleShowsec = () => {\r\n    setShowsec(true);\r\n  };\r\n  const ref = firebase.database().ref(\"chosenDoctor\");\r\n  useEffect(() => {\r\n    setSelected({\r\n      ...selected,\r\n      date: chosenDate,\r\n      visited: \"Pas encore\",\r\n      work: [],\r\n      achivement: 0,\r\n    });\r\n  }, [chosenDate]);\r\n  let filtred = props.list.filter((el) =>\r\n    el.name.toUpperCase().includes(keyword.toUpperCase())\r\n  );\r\n  let filtredspec = filtred.filter((el) =>\r\n    el.spec.toUpperCase().includes(keywordspec.toUpperCase())\r\n  );\r\n  let filtredgov = filtredspec.filter((el) =>\r\n    el.gov.toUpperCase().includes(keywordgov.toUpperCase())\r\n  );\r\n  const valider = () => {\r\n    let dovVerif = chosenDoc.filter((el) => el.date === chosenDate);\r\n    let docToAdd = dovVerif.find((el) => el.name === selected.name);\r\n    !docToAdd && setChosenDoc(chosenDoc.concat(selected));\r\n    handleClose();\r\n  };\r\n  const validersec = () => {\r\n    props.add(chosenDoc);\r\n    ref.push(chosenDoc);\r\n    handleClosesec();\r\n    setChosenDoc([]);\r\n  };\r\n  return (\r\n    <div className=\"container-fluid row\">\r\n      <h1 className=\"col-12\">Planification</h1>\r\n      <div className=\"col-12\">\r\n        <input\r\n          type=\"date\"\r\n          onChangeCapture={(e) => {\r\n            setChosenDate(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            handleShowsec();\r\n          }}\r\n        >\r\n          Valider la planification\r\n        </button>\r\n      </div>\r\n      <div className=\"col-12\"></div>\r\n      <div className=\"col-1\"></div>\r\n      <table className=\"col-10\">\r\n        <tr className=\"form\">\r\n          <th className=\"tableau\">\r\n            Nom\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeyword(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Specialité\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordspec(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Adresse\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordgov(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n        </tr>\r\n        {filtredgov.map((el) => {\r\n          return (\r\n            <tr\r\n              className=\"form\"\r\n              onClick={() => {\r\n                if (chosenDate === \"\") {\r\n                  alert(\"Veuillez choisir une date\");\r\n                } else {\r\n                  handleShow();\r\n                  setSelected({\r\n                    ...selected,\r\n                    id: uuidv4(),\r\n                    name: el.name,\r\n                    spec: el.spec,\r\n                    gov: el.gov,\r\n                    medic: [],\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              <td className=\"tableau\">{el.name}</td>\r\n              <td className=\"tableau\">{el.spec}</td>\r\n              <td className=\"tableau\">{el.gov}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </table>\r\n      <div className=\"col-1\"></div>\r\n      <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Valider le contact</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid row\">\r\n              <div className=\"col-12\">{selected.name}</div>\r\n              <div className=\"col-12\">{selected.spec}</div>\r\n              <div className=\"col-12\">\r\n                <div>\r\n                  {props.drug\r\n                    .filter((el) => el.name === selected.spec)\r\n                    .map((el) =>\r\n                      el.medic.map((ele, i) => {\r\n                        return (\r\n                          <div>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id={i}\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setSelected({\r\n                                    ...selected,\r\n                                    medic: selected.medic.concat(ele),\r\n                                  });\r\n                                } else {\r\n                                  setSelected({\r\n                                    ...selected,\r\n                                    medic: selected.medic.filter(\r\n                                      (x) => ele != x\r\n                                    ),\r\n                                  });\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label htmlFor={i}>{ele}</label>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={valider}>\r\n              Valider\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={showsec} onHide={handleClosesec}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Valider le contact</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <table className=\"container-fluid row\">\r\n              <tr className=\"form col-12\">\r\n                <th className=\"tableau\">Name</th>\r\n                <th className=\"tableau\">Date</th>\r\n                <th className=\"tableau\">Medicamment</th>\r\n              </tr>\r\n              {chosenDoc.map((el) => {\r\n                return (\r\n                  <tr className=\"form col-12\">\r\n                    <td className=\"col-4 tableau\">{el.name} </td>\r\n                    <td className=\"col-4 tableau\"> {el.date} </td>\r\n                    <td className=\"col-4 tableau\">\r\n                      {el.medic && el.medic.map((ele) => <h5>{ele}</h5>)}{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClosesec}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={validersec}>\r\n              Valider\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.DoctorsReducer,\r\n    drug: state.DrugsReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    add: (doctors) => dispatch(add(doctors)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nfunction History(props) {\r\n  const [visited, setvisited] = useState(\"\");\r\n  const [keyword, setkeyword] = useState(\"\");\r\n  const [keywordach, setkeywordach] = useState(\"\");\r\n  const [keywordspec, setkeywordspec] = useState(\"\");\r\n  const [keywordgov, setkeywordgov] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [selected, setSelected] = useState({\r\n    name: \"\",\r\n    spec: \"\",\r\n    gov: \"\",\r\n    medic: [],\r\n    work: [],\r\n    achivement: \"\",\r\n  });\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  let filtredAch = props.list.filter((el) => el.achivement >= keywordach);\r\n  let dateFilter = filtredAch.filter((el) => el.date === date);\r\n  let filtredspec = dateFilter.filter((el) =>\r\n    el.spec.toUpperCase().includes(keywordspec.toUpperCase())\r\n  );\r\n  let filtredgov = filtredspec.filter((el) =>\r\n    el.gov.toUpperCase().includes(keywordgov.toUpperCase())\r\n  );\r\n  let filtred = filtredgov.filter((el) =>\r\n    el.name.toUpperCase().includes(keyword.toUpperCase())\r\n  );\r\n  let filtredvisit = filtred.filter((el) =>\r\n    el.visited.toUpperCase().includes(visited.toUpperCase())\r\n  );\r\n  return (\r\n    <div className=\"container-fluid row\">\r\n      <h1 className=\"col-12\">Historique</h1>\r\n      <div className=\"col-12\">\r\n        <input\r\n          type=\"date\"\r\n          onChange={(e) => {\r\n            setdate(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <table className=\"col-12\">\r\n        <tr className=\"form\">\r\n          <th className=\"tableau\">\r\n            Nom\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeyword(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Specialité\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordspec(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Adresse\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordgov(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\">\r\n            Objectf\r\n            <input\r\n              style={{ width: \"100%\" }}\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setkeywordach(e.target.value);\r\n              }}\r\n            />\r\n          </th>\r\n          <th className=\"tableau\" style={{ overflow: \"visible\" }}>\r\n            <DropdownButton\r\n              id=\"dropdown-basic-button\"\r\n              title={visited ? visited : \"Tout\"}\r\n            >\r\n              <Dropdown.Item onClick={() => setvisited(\"Visiter\")}>\r\n                Visiter\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => setvisited(\"Pas encore\")}>\r\n                Reste à visiter\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => setvisited(\"\")}>Tout</Dropdown.Item>\r\n            </DropdownButton>\r\n          </th>\r\n        </tr>\r\n\r\n        {filtredvisit.map((el) => {\r\n          return (\r\n            <tr\r\n              className=\"form\"\r\n              onClick={() => {\r\n                handleShow();\r\n                setSelected({\r\n                  name: el.name,\r\n                  spec: el.spec,\r\n                  gov: el.gov,\r\n                  medic: el.medic,\r\n                  work: el.work,\r\n                  achivement: el.achivement,\r\n                });\r\n              }}\r\n            >\r\n              <td className=\"tableau\">{el.name}</td>\r\n              <td className=\"tableau\">{el.spec}</td>\r\n              <td className=\"tableau\">{el.gov}</td>\r\n              <td className=\"tableau\">\r\n                {el.achivement ? `${el.achivement.toFixed(2)} %` : \"0 %\"}\r\n              </td>\r\n              <td className=\"tableau\">{el.visited}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </table>\r\n\r\n      <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Valider le contact</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid row\">\r\n              <h5 style={{ textAlign: \"center\" }}>{selected.name}</h5>\r\n              <table className=\"container-fluid row\">\r\n                <tr className=\"form col-12\">\r\n                  <th className=\"tableau\">Prévu</th>\r\n                  <th className=\"tableau\">Fait</th>\r\n                </tr>\r\n                <tr className=\"form col-12\">\r\n                  <td className=\"col-6 tableau\">\r\n                    {selected.medic.map((el) => (\r\n                      <h5>{el}</h5>\r\n                    ))}\r\n                  </td>\r\n                  <td className=\"col-6 tableau\">\r\n                    {selected.work.map((el) => (\r\n                      <h5>{el}</h5>\r\n                    ))}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.ChosenReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(History);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport MappedList from \"./MappedList\";\r\nimport OrgList from \"./OrgList\";\r\nimport History from \"./History\";\r\nexport default function Dashboard(props) {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={`/connected/`} component={MappedList} />\r\n        <Route exact path={`/connected/Planning`} component={OrgList} />\r\n        <Route exact path={`/connected/History`} component={History} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport PrivateRoute from \"./PrivetRoute\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../App.css\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction LoginPage(props) {\r\n  const [showpass, setshowpass] = useState(\"password\");\r\n  const [showhide, setshowhide] = useState(\"show\");\r\n  const [information, setInformation] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n  });\r\n  const [conVal, setconVal] = useState(false);\r\n  const showHide = (e) => {\r\n    showpass === \"password\" ? setshowpass(\"text\") : setshowpass(\"password\");\r\n    e.preventDefault();\r\n    showhide === \"show\" ? setshowhide(\"hide\") : setshowhide(\"show\");\r\n  };\r\n  const handleChange = (e) => {\r\n    setInformation({ ...information, [e.target.name]: e.target.value });\r\n  };\r\n  const logVerif = () => {\r\n    let x = 0;\r\n    props.user.map((element) => {\r\n      return (\r\n        element.name === information.name &&\r\n        element.password === information.password &&\r\n        x++\r\n      );\r\n    });\r\n    x > 0 ? setconVal(true) : alert(\"wrong username or password\");\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container-fluid row\"\r\n      style={{ padding: \"100px\", display: \"flex\", justifyContent: \"center\" }}\r\n    >\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={() => (\r\n          <Link to=\"/log\">\r\n            <Button>Login</Button>\r\n          </Link>\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/log\"\r\n        render={() => (\r\n          <form className=\"container-fluid row\" style={{ width: \"500px\" }}>\r\n            <div className=\"inputForm col-4 \"> Name: </div>\r\n\r\n            <input\r\n              className=\"inputForm col-8\"\r\n              type=\"text\"\r\n              placeholder=\"admin\"\r\n              name=\"name\"\r\n              value={information.name}\r\n              onChange={handleChange}\r\n            ></input>\r\n\r\n            <div className=\"inputForm col-4\">Password: </div>\r\n            <input\r\n              className=\"inputForm col-6\"\r\n              type={showpass}\r\n              placeholder=\"admin\"\r\n              name=\"password\"\r\n              value={information.password}\r\n              onChange={handleChange}\r\n            ></input>\r\n            <Button className=\"inputForm col-2\" onClick={showHide}>\r\n              {showhide}\r\n            </Button>\r\n\r\n            <div\r\n              className=\"inputForm col-12\"\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <Link to={`/connected`}>\r\n                <Button onClick={logVerif}>\r\n                  <h6 style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                    Login\r\n                  </h6>\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n      <div>\r\n        <PrivateRoute\r\n          path={`/connected`}\r\n          connected={conVal}\r\n          component={Dashboard}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.FirstReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(LoginPage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\n// import FireTest from \"../firetest\";\r\nexport default function NavBar(props) {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to={`/connected/`}>\r\n            <Button>Dashboard</Button>\r\n          </Link>\r\n          <Link to={`/connected/Planning`}>\r\n            <Button>Planning</Button>\r\n          </Link>\r\n          <Link to={`/connected/History`}>\r\n            <Button>History</Button>\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n      {/* <FireTest /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport LoginPage from \"./component/LogInPage\";\nimport NavBar from \"./component/NavBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Route path=\"/\" component={NavBar} />\n        <Route path=\"/\" component={LoginPage} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}